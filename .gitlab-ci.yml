stages:
  - sync
  - lint
  - build
  - test
  - coverage
  - release
  - deploy
  - docs

variables:
  IMAGE_DEV: ${CI_REGISTRY_IMAGE}:develop

# Conditions
#############
# Global Conditions
.if-default-branch-refs: &if-default-branch-refs
  if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

.if-tag: &if-tag
  if: '$CI_COMMIT_TAG'

.if-tag-semver: &if-tag-semver
  if: '$CI_COMMIT_TAG =~ /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/'

.if-merge-request: &if-merge-request
  if: '$CI_MERGE_REQUEST_IID'

.if-schedule: &if-schedule
  if: '$CI_PIPELINE_SOURCE == "schedule"'

# Includes
##########
include:
  - project: labs/salt-automation
    file:
      - gitlab-ci-templates/common/no-interrupt-meta.v1.yml
      - gitlab-ci-templates/common/conventional-commits.v1.yml
      - gitlab-ci-templates/common/conventional-commits-changelog-meta.v1.yml
      - gitlab-ci-templates/common/docker-build-meta.v2.yml
      - gitlab-ci-templates/common/docker-release-meta.v1.yml
  - project: labs/salt-automation
    file: gitlab-ci-templates/common/pre-commit.v1.yml
    rules:
      - <<: *if-merge-request

# Lint stage
#############
.lint-default: &lint-default
  stage: lint
  needs: []
  image: python:3.8
  tags:
    - docker

# Pre-commit:
#   <<: *lint-default
#   stage: lint
#   before_script:
#     - pip install pre-commit && pre-commit install
#   script:
#     - pre-commit run --all-files --verbose

Lint Dockerfiles:
  <<: *lint-default
  image: hadolint/hadolint:latest-debian
  before_script:
    - apt-get -y update
    - apt-get -y install --no-install-recommends git
  script:
    - git ls-files --exclude='Dockerfile*' --ignored | xargs --max-lines=1 hadolint

# Build stage
#############

# Build image:
#   stage: build
#   needs: []
#   dependencies: []
#   image:
#     name: gcr.io/kaniko-project/executor:debug-v0.16.0
#     entrypoint: [""]
#   script:
#     # Login to GitLab registry
#     - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
#     - /kaniko/executor
#       --cache
#       --context=$CI_PROJECT_DIR
#       --dockerfile=$CI_PROJECT_DIR/docker/Dockerfile
#       --destination=${IMAGE_DEV}

# Test stage
############
.test-default: &test-default
  stage: test
  dependencies: []

# Unittest:
#   <<: *test-default
#   needs: ["Build"]
#   image: ${IMAGE_DEV}
#   script:
#     - cd /app && python -m unittest
